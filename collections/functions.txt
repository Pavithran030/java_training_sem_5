
ArrayList:
Add();
get();
Size();
set();
remove();
contains();

LinkedList:

Add();
AddFirst();
AddLast();
get();
getLast();
getFirst();
Size();
set();
remove();
removeFirst();
removeLast();
contains();

Vector:

addElement();
Add();  with index
firstElement();
lastElement();
set();
remove();
removeElement();
removeAllElement();
Contains();
size();

Stack:

push();
pop();
peek();
empty();
search();

Set:
Hashset, treeset, LinkedHashset

HashSet:
add();
remove();
contains();
size();
clear();

Map:

put();
 get(); 
remove();
containsKey();
containsvalue();
clear();
size();
equals();
keyset();
isEmpty();
putIfAbsent();
replace(Key,Value);    =>replace(key,old,new);
entryset();
getOrDefault(key,"statement");

Deque:

addFirst();
addLast();
RemoveFirst();
removeLast();
offerFirst();
offerLast();
getFirst();
getLast();
peekFirst();
peekLast();
pollFirst();
pollLast();

Priority Queue:

offer();
element();

